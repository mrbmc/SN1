import com.phidgets.*;import com.phidgets.events.*;import flash.events.Event;var phid:PhidgetLED = new PhidgetLED();	phid.addEventListener(PhidgetEvent.CONNECT,	onConnect);	phid.addEventListener(PhidgetEvent.DETACH,	onDetach);	phid.addEventListener(PhidgetEvent.ATTACH,	onAttach);	phid.addEventListener(PhidgetErrorEvent.ERROR, onError);	phid.open("localhost", 5001);function onConnect(evt:PhidgetEvent):void{	_trace(evt);}function onAttach(evt:PhidgetEvent):void{	_trace(evt);	Phidgetstatus.text = phid.Name + " serial# "+phid.serialNumber+ " v"+phid.Version;	//	Serialnumber.text = phid.serialNumber;//	Version.text = phid.Version;//	NumberofLEDs.text = phid.LEDCount;	phid.CurrentLimit = 1;	phid.Voltage = 2.0;	_trace("current:"+phid.CurrentLimit);	_trace("voltage:"+phid.Voltage);}function onDetach(evt:PhidgetEvent):void{	_trace(evt);	Phidgetstatus.text = "";	Serialnumber.text = "";	Version.text = "";	NumberofLEDs.text = "";}function onError(evt:PhidgetErrorEvent):void {//	if(evt.indexOf("400")<=0)//		trace(evt);}var lightArchive = new Array(60);for(i=0;i<60;i++){	lightArchive[i] = (0);}function light (e:LightEvent) {	var _brightness:int = 0;	if(e.display!=null){		for(i in e.display) {			if(gridRef[i]==undefined) return;			_brightness = (i<60) ? (e.display[i]/100*globalBrightness) : e.display[i];			gridRef[i].lite.alpha = _brightness/100;			if(lightArchive[i]!=_brightness || _brightness<=0)				phid.setDiscreteLED( i, _brightness );			lightArchive[i]=_brightness;		}	} else {		if(gridRef[e.index]==undefined) return;		_brightness = (e.index<60) ? (e.brightness/100*globalBrightness) : e.brightness;		gridRef[e.index].lite.alpha = _brightness/100;		phid.setDiscreteLED( e.index, _brightness );		lightArchive[e.index]=_brightness;	}	return;}function blackout() {	trace("blackness");	for(i=0;i<60;i++) {		phid.setDiscreteLED( i, 0 );		gridRef[i].lite.alpha = 0;	}}