package com.wcp {	import flash.events.Event;	import flash.utils.Timer;	import flash.utils.getTimer;	import flash.events.TimerEvent;	import com.wcp.PalEffect;	import com.wcp.EffectEvent;	import com.wcp.LightEvent;	public class Engine extends Timer{		public var loop:Boolean = false;		public var randomize:Boolean = false;		public var display:Array = new Array(64);		private var _trail:int = 0;		private var _frames:int = 0;		private var _frame:int = 0;		private var _loops:int = 0;		private var _loop:int = 0;		private var fx:PalEffect;// = new PalEffect();		private var interval:int = 100;		private var time:Number = getTimer();		private var fps:int = 30;		public function Engine () {			for(var i=0;i<64;i++) display[i]=0;			this.addEventListener(TimerEvent.TIMER, this.iteration);			this.speed = 120;			super((1000/fps));		}				public function set speed (bpm:int) {			//convert BPM to BPS, quadrouple it for 16th notes			var bps = (bpm/60)*4;			//convert BPS to ms			interval = (1000/bps);		}		public function get speed ():int {			return Math.round((1000/interval)/4*60);		}				public function get frames():int {			return (this.loops>0) ? fx.sequence.length : fx.sequence.length + trail;		}		public function get loops():int {			return (fx.loops) ? fx.loops : 0;		}		public function get trail():int {			return (_trail>0) ? _trail : fx.trail;		}		public function set trail(n:int):void {			this._trail = n;		}		private function resetLoop() {			if(this.randomize) 				fx = new PalEffect(randomizer());			_frame = 0;//			_frames = fx.sequence.length + trail;			_loop = 0;			_loops = (fx.loops) ? fx.loops : 0;			time = 0;		}		public function go (effectName:String=null):Boolean {			if((effectName!="" && effectName!=null) || (fx.effectName==null || fx.effectName==""))				fx = new PalEffect(effectName);			this.resetLoop();			this.start();			return true;		}		private function iteration (t:TimerEvent) {			if(getTimer()-time < interval/fx.speed)				return;			time = getTimer();			//trace(_frame+"/"+frames+"/"+_loop+"/"+_loops);			var index = 0;			var brightness = 0;			for(i=0;i<64;i++) display[i]=0;			//loops through the trail iterations			for(i=0;i<=trail;i++){				var tgt = _frame - i;				if(tgt<0 || tgt>=fx.sequence.length) continue;				//loop through 64 LEDs				for(var j=0;j<fx.sequence[tgt].length;j++) {					if(fx.sequence[tgt][j] is Array) {						index = fx.sequence[tgt][j][0];						brightness = fx.sequence[tgt][j][1];					}else {						index = fx.sequence[tgt][j];						brightness = (100-(100/(trail+1)*i));					}					display[index] = brightness;				}			}			for(i in display){				dispatchEvent(new LightEvent(i,display[i]));			}			_frame++;			if(_frame > frames) {				if(loop || _loops>0) {					if(_loop>=_loops){						this.resetLoop();					} else {						_loop++;						_frame=0;					}				} else {					this.stop();				}			}		}		private function randomizer() {			var en = Math.floor(Math.random()*fx.effects.length);			return fx.effects[en];		}		public function listener (e:EffectEvent) {			//trace(e.effectName+":"+e.effect);			this.fx = e.effect;			if(e.action==EffectEvent.PLAY) {				this.resetLoop();				this.start();			}			return true;		}	}}