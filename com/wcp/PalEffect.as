package com.wcp {	import flash.utils.ByteArray;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.EventDispatcher;	import com.wcp.EffectEvent;	public class PalEffect extends EventDispatcher {		public var auto:Boolean = true;		public var loops:int = 0;		public var reverse:Boolean = false;		public var sequence:Array;		public var speed:Number = 1;		public var trail:int = 1;		public var brightness:int = 100;		public var hasChannel:Boolean = true;		public function PalEffect(_effectName:String=null) {			var stump = new Object();			stump.speed = 1;			stump.trail = 0;			stump.loops = 0;			stump.brightness = 100;			stump.sequence = new Array();			stump.hasChannel = true;			// __________________________________________________			// __________________________________________________			library.strobe = cloneObject(stump);			library.strobe.speed = 2;			library.strobe.hasChannel = false;			a = new Array();b = new Array();			for(i=0;i<64;i++) a.push(i);			library.strobe.sequence = new Array(a,b,a,b,a,b,a);			// __________________________________________________			// __________________________________________________			library.pulse = cloneObject(stump);			library.pulse.speed = 1;			library.pulse.sequence = new Array();			var v = 1;			while(v<100) {				a = new Array();b = new Array();				for(i=0;i<60;i++) {					a.push(new Array(""+i,v));				}				library.pulse.sequence.push(a);				v = Math.min(v*1.5,100);			}			v=100;			while(v>1) {				a = new Array();b = new Array();				for(i=0;i<60;i++) {					a.push(new Array(""+i,v));				}				library.pulse.sequence.push(a);				v = Math.max(v/1.25,0);			}			a = new Array();b = new Array();			for(i=0;i<60;i++) {				a.push(new Array(""+i,0));			}			library.pulse.sequence.push(a);			// __________________________________________________			// __________________________________________________			library.spiral = cloneObject(stump);			library.spiral.sequence = new Array(120);			for(i=0;i<60;i++) {				j=(i%12)*5;				index = j+Math.floor(i/12);				library.spiral.sequence[i] = new Array(index+"");			}			for(i=59;i>=0;i--) {				j=(11-(i%12))*5;				index = j+Math.floor(i/12);				library.spiral.sequence[(119-i)] = new Array(index+"");			}			library.spiral2 = cloneObject(library.spiral);			for(i=6;i<60;i++) {				j=(i%12)*5;				index = j+Math.floor(i/12);				chaser = confine(index - 30,0,59);				library.spiral2.sequence[i].push(chaser+"");			}			for(i=59;i>=0;i--) {				j=(11-(i%12))*5;				index = j+Math.floor(i/12);				chaser = confine(index,0,59);				library.spiral2.sequence[(113-i)].push(index);			}			library.bouncer = cloneObject(stump);			library.bouncer.speed = 2;			library.bouncer.sequence = new Array(60);			for(i=0;i<60;i++) {				arm=(i%13)*5;				ring=Math.floor(i/13);				index = arm+ring;				library.bouncer.sequence[i] = new Array(index+"");			}			for(i=0;i<60;i++) {				arm = confine(60-((i%13)*5),0,59);				ring = Math.floor(i/13);				index = arm + ring;				library.bouncer.sequence[i].push(index+"");			}			// __________________________________________________			// __________________________________________________			library.stars = cloneObject(stump);			library.stars.speed = 4;			library.stars.trail = 4;			library.stars.hasChannel = false;			var shooters = new Array();			for(i=0;i<6;i++) 				shooters[i] = new Array();			for(i=0;i<60;i++) {				row = Math.floor(i/5);				frame = Math.floor((i%30)/5);				base = row * 12;				index = (i>=30) ? i : ((row+1)*5)-(i%5)-1;				//trace(i+":"+frame+":"+row + ":" + base + ":" + index);				shooters[frame].push(new Array(""+index));			}			library.stars.sequence = shooters[Math.floor(Math.random()*shooters.length)];			// __________________________________________________			// __________________________________________________			library.warp = cloneObject(stump);			library.warp.sequence = new Array(				new Array(0,8,16,24,32,40,48,56)				,new Array(1,9,17,25,33,41,49,57)				,new Array(2,10,18,26,34,42,50,58)				,new Array(3,11,19,27,35,43,51,59)				,new Array(4,12,20,28,36,44,52,60)				,new Array(5,13,21,29,37,45,53,61)				,new Array(6,14,22,30,38,46,54,62)				,new Array(7,15,23,31,39,47,55,63)			);			// __________________________________________________			// __________________________________________________			library.rings = cloneObject(stump);			for(i=0;i<5;i++) library.rings.sequence[i] = (new Array());			var frame = 0;			for(i=0;i<60;i++) {				frame = (i%5);				index = i+(frame*5);				//trace("i:"+i+" frame:"+frame+" index:"+index);				library.rings.sequence[frame].push(i);			}			// __________________________________________________			// __________________________________________________			library.clock = cloneObject(stump);			row = new Array();			for(i=0;i<60;i++) {				row.push(i);				if(i%5==4) {					library.clock.sequence.push(row);					row = new Array();				}			}			// __________________________________________________			// __________________________________________________			library.twinkle = cloneObject(stump);			library.twinkle.speed = .5;			library.twinkle.trail = 2;			library.twinkle.sequence = new Array(10);			for(i=0;i<library.twinkle.sequence.length;i++){				if(library.twinkle.sequence[i]==undefined)					library.twinkle.sequence[i]=new Array();			}			for(i in library.twinkle.sequence){				for(j=0;j<60;j+=3) {					library.twinkle.sequence[i].push(new Array(j,picker(50,100)));				}			}									library.disco = cloneObject(stump);			library.disco.speed = 0.25;			var randomOrder = new Array(1,11,3,7,5,9,2,4,8,0,10,6);			for(j=0;j<12;j++) {				a = new Array();				for(i=0;i<5;i++) {					a.push((randomOrder[j]*5)+i);				}				library.disco.sequence.push(a);			}						if(_effectName!=null){				for(k in this.library[_effectName])					this[k] = this.library[_effectName][k];			}			for(i in library) {				effects.push(i)			}						}		private function picker(min=0,max=0):int {			return (Math.round(Math.random()*(max-min))+min);		}				private function confine(val,min,max) {			if(val>max)				val -= max;			else if(val<min)				val += max;			return val;		}		public function cloneObject(o:Object):Object{			var bytes:ByteArray = new ByteArray();				bytes.writeObject(o);				bytes.position = 0;			return bytes.readObject();		}		private var a = new Array();		private var b = new Array();		public var effectName:String = null;		public var library:Object = new Object();		public var effects:Array = new Array();	}}