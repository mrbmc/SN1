package com.wcp {	import fl.controls.Slider;	import fl.controls.NumericStepper;	import fl.controls.CheckBox;	import fl.controls.RadioButton;	import fl.controls.RadioButtonGroup;	import fl.events.SliderEvent;	import flash.display.MovieClip;	import flash.text.TextFormat;	import flash.text.TextField;	import flash.events.MouseEvent;	import flash.events.Event;	import com.wcp.PalEffect;	import com.wcp.EffectEvent;	public class Channel extends MovieClip {		private var autoControl:CheckBox;		private var loopControl:NumericStepper;		private var trailControl:NumericStepper;		private var speedControl:RadioButtonGroup;		public var brightControl:Slider;		private var reverseControl:RadioButton;		private var triggerControl:MyButton;		public var effect:PalEffect;		public var effectName:String;		private var size = 40;		public function Channel (_effectName,hotkey) {			super();			var margin = 5;			this.effectName = _effectName;			effect = new PalEffect(effectName);						triggerControl = new MyButton();			triggerControl.setSize(70,size);			triggerControl.move(0,0);			triggerControl.label = effectName + " ("+hotkey+")";			triggerControl.effectName = effectName;			triggerControl.addEventListener (MouseEvent.CLICK,channelListener);			triggerControl.alpha = 1;			addChild(triggerControl);						autoControl = new CheckBox();			autoControl.label = "";			autoControl.x = triggerControl.x+triggerControl.width+margin;			autoControl.y = 10;			autoControl.selected = effect.auto;			autoControl.addEventListener(MouseEvent.CLICK,parameterHandler);			addChild(autoControl);						trailControl = new NumericStepper();			trailControl.move(autoControl.x+20+margin,10);			trailControl.setSize(35,20);			trailControl.value = effect.trail;			trailControl.addEventListener(Event.CHANGE,parameterHandler);			addChild(trailControl);						loopControl = new NumericStepper();			loopControl.move(trailControl.x+trailControl.width+margin,10);			loopControl.setSize(35,20);			loopControl.value = effect.loops;			loopControl.addEventListener(Event.CHANGE,parameterHandler);			addChild(loopControl);						speedControl = new RadioButtonGroup("speed");			speedControl.addEventListener(Event.CHANGE,parameterHandler);			var speedQrtr = new RadioButton();				speedQrtr.label=0.25;				speedQrtr.group = speedControl;				speedQrtr.move(loopControl.x+loopControl.width+5,10);			addChild(speedQrtr);			var speedHalf = new RadioButton();				speedHalf.label=0.5;				speedHalf.group = speedControl;				speedHalf.move(speedQrtr.x+20,10);			addChild(speedHalf);			var speedNormal = new RadioButton();				speedNormal.label="1";				speedNormal.group = speedControl;				speedNormal.move(speedHalf.x+20,10);				speedNormal.selected = true;			addChild(speedNormal);			var speedDouble = new RadioButton();				speedDouble.label=2;				speedDouble.group = speedControl;				speedDouble.move(speedNormal.x+20,10);			addChild(speedDouble);			var speedFast = new RadioButton();				speedFast.label=4;				speedFast.group = speedControl;				speedFast.move(speedDouble.x+20,10);			addChild(speedFast);			switch(effect.speed+"") {				case "0.5":					speedControl.selection = speedHalf;				break;				case "1":					speedControl.selection = speedNormal;				break;				case "2":				case "4":					speedControl.selection = speedFast;				break;			}			brightControl = new Slider();			brightControl.setSize(210,20);			brightControl.move(speedFast.x+25,20);			brightControl.liveDragging = true;			brightControl.minimum = 0;			brightControl.maximum = 100;			brightControl.snapInterval = 1;			brightControl.tickInterval = 5;			brightControl.value = 100;			brightControl.addEventListener(SliderEvent.CHANGE, parameterHandler);			addChild(brightControl);			for(i=0;i<8;i++) {				btn = new PalButton((i+1),size,size);				btn.x = (brightControl.x+brightControl.width+10+margin)+(i*(size+5));				btn.y = 0;				btn.spot.addEventListener(MouseEvent.MOUSE_DOWN, StepOverHandler);				btn.spot.addEventListener(MouseEvent.MOUSE_OVER, StepOverHandler);				btn.spot.addEventListener(MouseEvent.MOUSE_UP, StepOutHandler);				btn.spot.addEventListener(MouseEvent.MOUSE_OUT, StepOutHandler);				addChild(btn);			}		}		function parameterHandler(event:*):void {			if(brightControl===null)				return;			effect.trail = trailControl.value;			effect.loops = loopControl.value;			effect.brightness = brightControl.value;			effect.speed = speedControl.selection.label;			dispatchEvent(new EffectEvent(EffectEvent.CHANGED,this.effectName,this.effect));		}		private function channelListener(e:Event):void {			dispatchEvent(new EffectEvent(EffectEvent.PLAY,this.effectName,this.effect));		}		public function go(o:*=null) {			dispatchEvent(new EffectEvent(EffectEvent.PLAY,this.effectName,this.effect));		}		private function StepOverHandler(e:MouseEvent):void {		}		private function StepOutHandler(e:MouseEvent):void {		}	}}